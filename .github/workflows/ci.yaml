name: Serverless Devs Project CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  simple-other-ci:
    runs-on: ubuntu-latest
    container: rsonghuster/fc-app-builder:latest
    steps:
      - uses: actions/checkout@v2
      - name: npm install s
        run: |
          npm install -g @xsahxl/s
      - name: s3 config
        run: |
          s3 config add --AccessKeyID ${{secrets.ACCESSKEYID}} --AccessKeySecret ${{secrets.ACCESSKEYSECRET}} -a quanxi -f
      - name: test fc-backend
        run: |
          bash test-fc-backend.sh
      - name: test windows deploy&invoke
        run: |
          bash test-windows.sh
  python:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: docker-practice/actions-setup-docker@master
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - name: npm install s
        run: |
          npm install -g @xsahxl/s
      - name: s3 config
        run: |
          s3 config add --AccessKeyID ${{secrets.ACCESSKEYID}} --AccessKeySecret ${{secrets.ACCESSKEYSECRET}} -a quanxi -f
      - name: test python
        run: |
          bash test-python.sh
  nodejs:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: docker-practice/actions-setup-docker@master
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - name: npm install s
        run: |
          npm install -g @xsahxl/s
      - name: s3 config
        run: |
          s3 config add --AccessKeyID ${{secrets.ACCESSKEYID}} --AccessKeySecret ${{secrets.ACCESSKEYSECRET}} -a quanxi -f
      - name: test nodejs
        run: |
          bash test-node.sh
  custom:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: docker-practice/actions-setup-docker@master
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - name: npm install s
        run: |
          npm install -g @xsahxl/s
      - name: s3 config
        run: |
          s3 config add --AccessKeyID ${{secrets.ACCESSKEYID}} --AccessKeySecret ${{secrets.ACCESSKEYSECRET}} -a quanxi -f
      - name: test custom.debian10
        run: |
          bash test-cr-debian10.sh
      - name: test custom 
        run: |
          bash test-cr.sh
  other-runtimes:
    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 3
      fail-fast: false
      matrix:
        os: [ubuntu-latest, macos-latest]
    steps:
      - uses: actions/checkout@v2
      - uses: docker-practice/actions-setup-docker@master
      - uses: actions/setup-node@v2
        with:
          node-version: 14
          registry-url: https://registry.npmjs.org/
      - name: npm install s
        run: |
          npm install -g @xsahxl/s
      - name: s3 config
        run: |
          s3 config add --AccessKeyID ${{secrets.ACCESSKEYID}} --AccessKeySecret ${{secrets.ACCESSKEYSECRET}} -a quanxi -f
      - name: test golang
        run: |
          bash test-go.sh
      - name: test php
        run: |
          bash test-php.sh
      - name: test custom container
        run: |
          bash test-ccr.sh
      - name: test java
        run: |
          bash test-java.sh